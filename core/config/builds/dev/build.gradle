/*
 *  Copyright 2014 TWO SIGMA OPEN SOURCE, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
def coreDir = file("../../../") // TODO, this can come from a property

ext {
  evalPluginDir = new File(coreDir, "config/plugins/eval")
}

task build
task clean
task run (type: Exec) {
  workingDir coreDir
  commandLine './beaker.command'
}
task runOnly (type: Exec) {
  workingDir coreDir
  commandLine './beaker.command'
}

task installPlugins {
  def pluginProjects = project.subprojects.grep { it.project.path.startsWith(':plugin:') }
  pluginProjects.each {
    installPlugins.dependsOn(it.project.path + ":installApp")
  }
}

task cleanPlugins (type: Exec) {
  commandLine 'rm', '-rf', evalPluginDir.absolutePath
}

run {
  if ( project.hasProperty("appArgs") ) {
    args Eval.me(appArgs)
  }
}


clean.dependsOn(":core:clean")
clean.dependsOn(cleanPlugins)
build.dependsOn(":core:build")
build.dependsOn(":core:installApp")
build.dependsOn(installPlugins)
run.dependsOn(build)
