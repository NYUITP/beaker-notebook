/*
 *  Copyright 2014 TWO SIGMA OPEN SOURCE, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
apply plugin:'java'

apply plugin:'application'
mainClassName = 'com.twosigma.beaker.core.Main'

def windows() {
  return System.getProperty('os.name').contains('Windows')
}
def mac() {
  return System.getProperty('os.name').contains('Mac')
}

repositories {
  mavenCentral()
}

dependencies {
  compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '8.1.13.v20130916'
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3'
  runtime group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.6'
  compile group: 'org.samba.jcifs', name: 'jcifs', version: '1.3.3'
  compile group: 'com.sun.jersey', name: 'jersey-servlet', version: '1.17.1'
  compile group: 'com.sun.jersey', name: 'jersey-server', version: '1.17.1'
  compile group: 'com.sun.jersey', name: 'jersey-core', version: '1.17.1'
  compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
  compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.3.1'
  compile group: 'org.jvnet.winp', name: 'winp', version: '1.18'
  compile project(':shared')
}

task (npmInstall, type: Exec) {
  if (windows()) {
     commandLine 'cmd', '/c', 'npm', 'install'
  } else {
     commandLine 'npm', 'install'
  }
}

task (bowerInstall, type: Exec) {
  if (windows()) {
    commandLine 'cmd', '/c', 'bower', 'install'
  } else {
    commandLine './node_modules/bower/bin/bower', 'install'
  }
}

task (copyNginx, type: Exec) {
  commandLine 'cp -f /usr/local/lib/libpcre.1.dylib /usr/local/bin/nginx /usr/local/etc/nginx/mime.types nginx/bin'.split()
}

bowerInstall.dependsOn npmInstall
run.dependsOn jar
if (mac()) {
  build.dependsOn copyNginx
  run.dependsOn copyNginx
  startScripts {
    defaultJvmOpts=["-Dbeaker.nginx.bin.dir=" + "./nginx/bin"]
  }
}

compileJava {
  options.compilerArgs << '-Xlint:deprecation'
  options.compilerArgs << '-Xlint:unchecked'
}

/* for testing
run {
  args '--disable-kerberos', '--default-notebook', 'config/default-test.bkr'
}
*/

// need to remove META-INF/*.SF to use this.
//build.dependsOn jar
//jar {
//  from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//}
